.edit-post-visual-editor {
	position: relative;
	display: flex;
	flex-flow: column;
	// In the iframed canvas this keeps extra scrollbars from appearing (when block toolbars overflow). In the
	// legacy (non-iframed) canvas, overflow must not be hidden in order to maintain support for sticky positioning.
	&:not(.has-inline-canvas) {
		overflow: hidden;
	}

	// Gray preview overlay (desktop/tablet/mobile) is intentionally not set on an element with scrolling content like
	// interface-interface-skeleton__content. This causes graphical glitches (flashes of the background color)
	// when scrolling in Safari due to incorrect ordering of large compositing layers (GPU acceleration).
	background-color: $gray-900;

	// The button element easily inherits styles that are meant for the editor style.
	// These rules enhance the specificity to reduce that inheritance.
	// This is duplicated in edit-site.
	& .components-button {
		font-family: $default-font;
		font-size: $default-font-size;
		padding: 6px 12px;

		&.is-tertiary,
		&.has-icon {
			padding: 6px;
		}
	}

	// The following flex rule is important for the canvas layout, please be careful when refactoring,
	// as older browser interpret flex height behavior differently. Be sure to test on Safari 13.
	// The syntax is `flex: [flex-grow] [flex-shrink] [flex-basis];`
	// We set the canvas to be allowed to grow (vertically), but not shrink.
	flex: 1 0 auto;

	// Since the parent container is also a flex container, a `flex-basis: 100%;` is not needed,
	// as align-items: stretch is inherited by default.Additionally due to older browser's flex height
	// interpretation, any percentage value is likely going to cause issues, such as metaboxes overlapping.
	// See also https://www.w3.org/TR/CSS22/visudet.html#the-height-property.
}

// Ideally this wrapper div is not needed but if we want to match the positioning of blocks
// .block-editor-block-list__layout and block-editor-block-list__block
// We need to have two DOM elements.
.edit-post-visual-editor__post-title-wrapper {
	.editor-post-title {
		// Center.
		margin-left: auto;
		margin-right: auto;
	}

	// Add extra margin at the top, to push down the Title area in the post editor.
	margin-top: 4rem;
	margin-bottom: var(--wp--style--block-gap);
}

.edit-post-visual-editor__content-area {
	width: 100%;
	height: 100%;
	position: relative;
	box-sizing: border-box;
	display: flex;

	// This is necessary for older browsers due to their flex height interpretation.
	// These browsers (including Safari 13) ignore the percentage value entirely.
	// By setting flex-grow, the element stretches to fill the parent.
	// See also https://www.w3.org/TR/CSS22/visudet.html#the-height-property
	flex-grow: 1;
}

// Fixed contextual toolbar
@include editor-left(".edit-post-visual-editor .block-editor-block-contextual-toolbar.is-fixed");

.edit-post-visual-editor .block-editor-block-contextual-toolbar.is-fixed {
	position: sticky;
	top: 0;
	z-index: z-index(".block-editor-block-popover");
	display: block;
	width: 100%;

	// on desktop and tablet viewports the toolbar is fixed
	// on top of interface header
	$toolbar-margin: $grid-unit-80 * 3 - 2 * $grid-unit + $grid-unit-05;

	@include break-medium() {
		// leave room for block inserter, undo and redo, list view
		margin-left: $toolbar-margin;
		// position on top of interface header
		position: fixed;
		top: $admin-bar-height;
		// Don't fill up when empty
		min-height: initial;
		// remove the border
		border-bottom: none;
		// has to be flex for collapse button to fit
		display: flex;

		// Mimic the height of the parent, vertically align center, and provide a max-height.
		height: $header-height;
		align-items: center;


		// on tablet viewports the toolbar is fixed
		// on top of interface header and covers the whole header
		// except for the inserter on the left
		width: calc(100% - #{$toolbar-margin});

		&.is-collapsed {
			width: initial;
		}

		&:empty {
			width: initial;
		}

		.is-fullscreen-mode & {
			// leave room for block inserter, undo and redo, list view
			// and some margin left
			margin-left: $grid-unit-80 * 4 - 2 * $grid-unit;

			top: 0;

			&.is-collapsed {
				width: initial;
			}

			&:empty {
				width: initial;
			}
		}

		.show-icon-labels & {
			width: calc(100% + 40px - #{$toolbar-margin}); //there are no undo, redo and list view buttons
			margin-left: $grid-unit-80 + 2 * $grid-unit; // inserter and margin

			.is-fullscreen-mode & {
				margin-left: $grid-unit * 18; // site hub, inserter and margin
			}
		}
	}

	// on desktop viewports the toolbar is fixed
	// on top of interface header and leaves room
	// for the block inserter the publish button
	@include break-large() {
		width: auto;
		.show-icon-labels & {
			width: auto; //there are no undo, redo and list view buttons
		}

		.is-fullscreen-mode & {
			// in full screen mode we need to account for
			// the combined with of the tools at the right of the header and the margin left
			// of the toolbar which includes four buttons
			width: calc(100% - 280px - #{4 * $grid-unit-80});
		}
	}
}
