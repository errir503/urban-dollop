.edit-post-header {
	height: $header-height;
	background: $white;
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	// The header should never be wider than the viewport, or buttons might be hidden. Especially relevant at high zoom levels. Related to https://core.trac.wordpress.org/ticket/47603#ticket.
	max-width: 100vw;

	// Make toolbar sticky on larger breakpoints
	@include break-zoomed-in {
		flex-wrap: nowrap;
	}

	// Some browsers, most notably IE11, honor an older version of the flexbox spec
	// which takes absolutely positioned items into account when calculating `space-between`.
	// https://www.w3.org/TR/2012/WD-css3-flexbox-20120612/#abspos-flex-items
	//
	// This difference is causing our header layout to break when focused in IE11.
	// Our focused region styles use an absolutely positioned :after pseudo element to draw an outline,
	// and IE11 is adding space between it and our last real child, shifting righthand UI elements
	// to the left. For a workaround, we change the flex order to move the undesired spacing to the middle
	// where it is no longer noticeable.
	> .edit-post-header__settings {
		order: 1;

		// Restore default order for all other browsers
		@supports (position: sticky) {
			order: initial;
		}
	}
}

.edit-post-header__toolbar {
	display: flex;
	flex-grow: 1;

	.table-of-contents {
		display: none;

		@include break-small() {
			display: block;
		}
	}
}

.edit-post-header__center {
	flex-grow: 1;
	display: flex;
	justify-content: center;
}

/**
 * Buttons on the right side
 */

.edit-post-header__settings {
	display: inline-flex;
	align-items: center;
	flex-wrap: wrap;
	padding-right: $grid-unit-05;

	@include break-small () {
		padding-right: $grid-unit-20 - ($grid-unit-15 * 0.5);
	}

	gap: $grid-unit-05;

	@include break-small() {
		gap: $grid-unit-10;
	}
}

.edit-post-header-preview__grouping-external {
	display: flex;
	position: relative;
	padding-bottom: 0;
}

.edit-post-header-preview__button-external {
	padding-left: $grid-unit-10;

	margin-right: auto;
	width: 100%;
	display: flex;
	justify-content: flex-start;

	svg {
		margin-left: auto;
	}
}

.edit-post-post-preview-dropdown .components-popover__content {
	padding-bottom: 0;
}

/**
 * Show icon labels.
 */

.show-icon-labels.interface-pinned-items,
.show-icon-labels .edit-post-header,
.edit-post-header__dropdown {
	.components-button.has-icon {
		width: auto;

		// Hide the button icons when labels are set to display...
		svg {
			display: none;
		}
		// ... and display labels.
		&::after {
			content: attr(aria-label);
		}
		&[aria-disabled="true"] {
			background-color: transparent;
		}
	}
	.is-tertiary {
		&:active {
			box-shadow: 0 0 0 1.5px var(--wp-admin-theme-color);
			background-color: transparent;
		}
	}
	// Exception for drodpdown toggle buttons.
	// Exception for the fullscreen mode button.
	.edit-post-fullscreen-mode-close.has-icon,
	.components-button.has-icon.button-toggle {
		svg {
			display: block;
		}
		&::after {
			content: none;
		}
	}
	// Undo the width override for fullscreen mode button.
	.edit-post-fullscreen-mode-close.has-icon {
		width: $header-height;
	}
	// Don't hide MenuItemsChoice check icons
	.components-menu-items-choice .components-menu-items__item-icon.components-menu-items__item-icon {
		display: block;
	}
	.edit-post-header-toolbar__inserter-toggle.edit-post-header-toolbar__inserter-toggle,
	.interface-pinned-items .components-button {
		padding-left: $grid-unit;
		padding-right: $grid-unit;

		@include break-small {
			padding-left: $grid-unit-15;
			padding-right: $grid-unit-15;
		}
	}

	.editor-post-save-draft.editor-post-save-draft,
	.editor-post-saved-state.editor-post-saved-state {
		&::after {
			content: none;
		}
	}
}

.edit-post-header__dropdown {
	.components-menu-item__button.components-menu-item__button,
	.components-button.editor-history__undo,
	.components-button.editor-history__redo,
	.table-of-contents .components-button,
	.components-button.block-editor-list-view {
		margin: 0;
		padding: 6px 6px 6px $grid-unit-50;
		width: 14.625rem;
		text-align: left;
		justify-content: flex-start;
	}
}

.show-icon-labels.interface-pinned-items {
	padding: 6px $grid-unit-15 $grid-unit-15;
	margin-top: 0;
	margin-bottom: 0;
	margin-left: -$grid-unit-15;
	margin-right: -$grid-unit-15;
	border-bottom: 1px solid $gray-400;
	display: block;

	> .components-button.has-icon {
		margin: 0;
		padding: 6px 6px 6px $grid-unit;
		width: 14.625rem;
		justify-content: flex-start;

		&[aria-expanded="true"] svg {
			display: block;
			max-width: $grid-unit-30;
		}
		&[aria-expanded="false"] {
			padding-left: $grid-unit-50;
		}
		svg {
			margin-right: 8px;
		}
	}
}

.is-distraction-free {
	.interface-interface-skeleton__header {
		border-bottom: none;
	}

	.edit-post-header {
		backdrop-filter: blur(20px) !important;
		background-color: rgba(255, 255, 255, 0.9);
		border-bottom: 1px solid #e0e0e0;
		position: absolute;
		width: 100%;


		// hide some parts
		& > .edit-post-header__settings > .editor-post-preview {
			visibility: hidden;
		}

		& > .edit-post-header__toolbar .edit-post-header-toolbar__inserter-toggle,
		& > .edit-post-header__toolbar .edit-post-header-toolbar__document-overview-toggle,
		& > .edit-post-header__settings > .block-editor-post-preview__dropdown,
		& > .edit-post-header__settings > .interface-pinned-items {
			display: none;
		}

	}

	// We need ! important because we override inline styles
	// set by the motion component.
	.interface-interface-skeleton__header:focus-within {
		opacity: 1 !important;
		div {
			transform: translateX(0) translateZ(0) !important;
		}

	}

	.components-editor-notices__dismissible {
		position: absolute;
		z-index: 35;
	}
}
