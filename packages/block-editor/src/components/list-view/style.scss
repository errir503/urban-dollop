.block-editor-list-view-tree {
	width: 100%;
	border-collapse: collapse;
	padding: 0;
	margin: 0;

	// Move upwards when in modal.
	.components-modal__content & {
		margin: (-$grid-unit-15) (-$grid-unit-15 * 0.5) 0;
		width: calc(100% + #{ $grid-unit-15 });
	}
}

.block-editor-list-view-leaf {
	// Use position relative for row animation.
	position: relative;

	.block-editor-list-view-block-select-button {
		// When a row is expanded, retain the dark color.
		&[aria-expanded="true"] {
			color: inherit;
		}

		// Ensure that on hover, the admin color is still used.
		&:hover {
			color: var(--wp-admin-theme-color);
		}
	}

	&:not(.is-selected) .block-editor-list-view-block-select-button {
		// While components are being dragged, ensure that hover styles are not applied.
		// This resolves a bug where while dragging, the hover styles would be applied to
		// the wrong list item while scrolling long lists, particularly in Chrome.
		.is-dragging-components-draggable & {
			&:hover {
				color: inherit;
			}
		}
	}

	// The background has to be applied to the td, not tr, or border-radius won't work.
	&.is-selected td {
		background: var(--wp-admin-theme-color);
	}
	&.is-selected.is-synced td {
		background: var(--wp-block-synced-color);
	}
	&.is-synced:not(.is-selected) .block-editor-list-view-block-contents {
		&:hover,
		&:focus,
		.block-editor-block-icon {
			color: var(--wp-block-synced-color);
		}

		&:focus::after {
			box-shadow:
				inset 0 0 0 1px $white,
				0 0 0 var(--wp-admin-border-width-focus) var(--wp-block-synced-color);
		}
	}
	&.is-selected .block-editor-list-view-block-contents,
	&.is-selected .components-button.has-icon {
		color: $white;
	}
	&.is-selected .block-editor-list-view-block-contents:focus {
		&::after {
			box-shadow:
				inset 0 0 0 1px $white,
				0 0 0 var(--wp-admin-border-width-focus) var(--wp-admin-theme-color);
		}
	}
	&.is-selected.is-synced .block-editor-list-view-block-contents:focus {
		&::after {
			box-shadow:
				inset 0 0 0 1px $white,
				0 0 0 var(--wp-admin-border-width-focus) var(--wp-block-synced-color);
		}
	}
	&.is-selected .block-editor-list-view-block__menu:focus {
		box-shadow: inset 0 0 0 var(--wp-admin-border-width-focus) $white;
	}

	// Border radius for corners of the selected item.
	&.is-first-selected td:first-child {
		border-top-left-radius: $radius-block-ui;
	}
	&.is-first-selected td:last-child {
		border-top-right-radius: $radius-block-ui;
	}
	&.is-last-selected td:first-child {
		border-bottom-left-radius: $radius-block-ui;
	}
	&.is-last-selected td:last-child {
		border-bottom-right-radius: $radius-block-ui;
	}
	&.is-branch-selected:not(.is-selected):not(.is-synced-branch) {
		background: rgba(var(--wp-admin-theme-color--rgb), 0.04);
	}
	&.is-synced-branch.is-branch-selected {
		background: rgba(var(--wp-block-synced-color--rgb), 0.04);
	}
	&.is-branch-selected.is-first-selected td:first-child {
		border-top-left-radius: $radius-block-ui;
	}
	&.is-branch-selected.is-first-selected td:last-child {
		border-top-right-radius: $radius-block-ui;
	}
	&[data-expanded="false"] {
		&.is-branch-selected.is-first-selected td:first-child {
			border-top-left-radius: $radius-block-ui;
		}
		&.is-branch-selected.is-first-selected td:last-child {
			border-top-right-radius: $radius-block-ui;
		}
		&.is-branch-selected.is-last-selected td:first-child {
			border-bottom-left-radius: $radius-block-ui;
		}
		&.is-branch-selected.is-last-selected td:last-child {
			border-bottom-right-radius: $radius-block-ui;
		}
	}
	&.is-branch-selected:not(.is-selected) td {
		border-radius: 0;
	}

	// List View renders a fixed number of items and relies on each item having a fixed height of 36px.
	// If this value changes, we should also change the itemHeight value set in useFixedWindowList.
	// See: https://github.com/WordPress/gutenberg/pull/35230 for additional context.
	.block-editor-list-view-block-contents {
		display: flex;
		align-items: center;
		width: 100%;
		height: auto;
		padding: ($grid-unit-15 * 0.5) $grid-unit-05 ($grid-unit-15 * 0.5) 0;
		text-align: left;
		border-radius: $radius-block-ui;
		position: relative;
		white-space: nowrap;

		&.is-dropping-before::before {
			content: "";
			position: absolute;
			pointer-events: none;
			transition: border-color 0.1s linear, border-style 0.1s linear, box-shadow 0.1s linear;
			top: -2px;
			right: 0;
			left: 0;
			border-top: 4px solid var(--wp-admin-theme-color);
		}

		.components-modal__content & {
			padding-left: 0;
			padding-right: 0;
		}
	}

	.block-editor-list-view-block-contents:focus {
		box-shadow: none;

		&::after {
			content: "";
			position: absolute;
			top: 0;
			right: -(24px + 5px); // Icon size + padding.
			bottom: 0;
			left: 0;
			border-radius: inherit;
			box-shadow: inset 0 0 0 var(--wp-admin-border-width-focus) var(--wp-admin-theme-color);
			z-index: 2;
			pointer-events: none;

			// Hide focus styles while a user is dragging blocks/files etc.
			.is-dragging-components-draggable & {
				box-shadow: none;
			}
		}
	}

	// Fix focus styling width when one row has fewer cells.
	&.has-single-cell .block-editor-list-view-block-contents:focus::after {
		right: 0;
	}

	.block-editor-list-view-block__menu:focus {
		box-shadow: inset 0 0 0 var(--wp-admin-border-width-focus) var(--wp-admin-theme-color);
		z-index: 1;

		// Hide focus styles while a user is dragging blocks/files etc.
		.is-dragging-components-draggable & {
			box-shadow: none;
		}
	}

	&.is-visible .block-editor-list-view-block-contents {
		opacity: 1;
		@include edit-post__fade-in-animation;
	}

	.block-editor-block-icon {
		margin-right: $grid-unit-10;
		flex: 0 0 $icon-size;
	}

	.block-editor-list-view-block__menu-cell,
	.block-editor-list-view-block__mover-cell,
	.block-editor-list-view-block__contents-cell {
		padding-top: 0;
		padding-bottom: 0;
	}

	.block-editor-list-view-block__menu-cell,
	.block-editor-list-view-block__mover-cell {
		line-height: 0;
		width: $button-size;
		vertical-align: middle;

		> * {
			opacity: 0;
		}

		// Show on hover, visible, when focused, and show above to keep the hit area size.
		&:hover,
		&:focus-within,
		&.is-visible {
			> * {
				opacity: 1;
			}
		}

		&,
		.components-button.has-icon {
			width: 24px;
			min-width: 24px;
			padding: 0;
		}
	}

	.block-editor-list-view-block__menu-cell {
		padding-right: $grid-unit-05;

		.components-button.has-icon {
			height: 24px;
		}
	}

	.block-editor-list-view-block__mover-cell-alignment-wrapper {
		display: flex;
		height: 100%;
		flex-direction: column;
		align-items: center;
	}

	// Keep the tap target large but the focus target small.
	.block-editor-block-mover-button {
		position: relative;
		width: $button-size;
		height: $button-size-small;

		// Position the icon.
		svg {
			position: relative;
			height: $button-size-small;
		}

		&.is-up-button {
			margin-top: -$grid-unit-15 * 0.5;
			align-items: flex-end;
			svg {
				bottom: -$grid-unit-05;
			}
		}

		&.is-down-button {
			margin-bottom: -$grid-unit-15 * 0.5;
			align-items: flex-start;
			svg {
				top: -$grid-unit-05;
			}
		}

		// Tweak size and position of focus ring.
		&::before {
			height: 16px;
			min-width: 100%;
			left: 0;
			right: 0;
		}
	}

	.block-editor-inserter__toggle {
		background: $gray-900;
		color: $white;
		height: $grid-unit-30;
		margin: 6px 6px 6px 1px;
		min-width: $grid-unit-30;

		&:active {
			color: $white;
		}
	}

	.block-editor-list-view-block-select-button__label-wrapper {
		min-width: 120px;
	}

	.block-editor-list-view-block-select-button__title {
		flex: 1;
		position: relative;

		.components-truncate {
			position: absolute;
			width: 100%;
			transform: translateY(-50%);
		}
	}

	.block-editor-list-view-block-select-button__anchor-wrapper {
		position: relative;
		max-width: min(110px, 40%);
		width: 100%;
	}

	.block-editor-list-view-block-select-button__anchor {
		position: absolute;
		right: 0;
		transform: translateY(-50%);
		background: rgba($black, 0.1);
		border-radius: $radius-block-ui;
		padding: 2px 6px;
		max-width: 100%;
		box-sizing: border-box;
	}

	&.is-selected .block-editor-list-view-block-select-button__anchor {
		background: rgba($black, 0.3);
	}

	.block-editor-list-view-block-select-button__lock,
	.block-editor-list-view-block-select-button__sticky {
		line-height: 0;
	}

	.block-editor-list-view-block-select-button__images {
		display: flex;
	}

	.block-editor-list-view-block-select-button__image {
		background-size: cover;
		width: 18px;
		height: 18px;
		border-radius: $radius-block-ui;

		&:not(:only-child) {
			box-shadow: 0 0 0 $radius-block-ui $white;
		}

		&:not(:first-child) {
			margin-left: #{$grid-unit-15 * -0.5};
		}
	}

	&.is-selected .block-editor-list-view-block-select-button__image {
		&:not(:only-child) {
			box-shadow: 0 0 0 $radius-block-ui var(--wp-admin-theme-color);
		}
	}
}

.block-editor-list-view-block__contents-cell,
.block-editor-list-view-appender__cell {
	.block-editor-list-view-block__contents-container,
	.block-editor-list-view-appender__container {
		display: flex;
	}
}

// Chevron container metrics.
.block-editor-list-view__expander {
	height: $icon-size;
	margin-left: $grid-unit-05;
	width: $icon-size;
}

// First level of indentation is aria-level 2, max indent is 8.
// Indent is a full icon size, plus 4px which optically aligns child icons to the text label above.
$block-navigation-max-indent: 8;
.block-editor-list-view-leaf[aria-level] .block-editor-list-view__expander {
	margin-left: ( $icon-size ) * $block-navigation-max-indent + 4 * ( $block-navigation-max-indent - 1 );
}

.block-editor-list-view-leaf:not([aria-level="1"]) {
	.block-editor-list-view__expander {
		margin-right: 4px;
	}
}

// When updating the margin for each indentation level, the corresponding
// indentation in `use-list-view-drop-zone.js` must be updated as well
// to ensure the drop zone is aligned with the indentation.
@for $i from 0 to $block-navigation-max-indent {
	.block-editor-list-view-leaf[aria-level="#{ $i + 1 }"] .block-editor-list-view__expander {
		@if $i - 1 >= 0 {
			margin-left: ( $icon-size * $i ) + 4 * ($i - 1);
		}
		@else {
			margin-left: ( $icon-size * $i );
		}
	}
}

.block-editor-list-view-leaf .block-editor-list-view__expander {
	visibility: hidden;
}

// Point downwards when open.
.block-editor-list-view-leaf[data-expanded="true"] .block-editor-list-view__expander svg {
	visibility: visible;
	transition: transform 0.2s ease;
	transform: rotate(90deg);
	@include reduce-motion("transition");
}

// Point rightwards when closed
.block-editor-list-view-leaf[data-expanded="false"] .block-editor-list-view__expander svg {
	visibility: visible;
	transform: rotate(0deg);
	transition: transform 0.2s ease;
	@include reduce-motion("transition");
}

.block-editor-list-view-drop-indicator {
	pointer-events: none;

	.block-editor-list-view-drop-indicator__line {
		background: var(--wp-admin-theme-color);
		height: 4px;
		border-radius: 4px;
	}
}

.block-editor-list-view-placeholder {
	padding: 0;
	margin: 0;
	height: 36px;
}

.list-view-appender .block-editor-inserter__toggle {
	background-color: #1e1e1e;
	color: #fff;
	margin: $grid-unit-10 0 0 24px;
	border-radius: 2px;
	height: 24px;
	min-width: 24px;
	padding: 0;

	&:hover,
	&:focus {
		background: var(--wp-admin-theme-color);
		color: #fff;
	}
}

.list-view-appender__description {
	display: none;
}
