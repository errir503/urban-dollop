.edit-site-sidebar-navigation-screen {
	display: flex;
	flex-direction: column;
	overflow-x: unset !important;
	position: relative;
}

.edit-site-sidebar-navigation-screen__main {
	// Ensure the sidebar is always at least as tall as the viewport.
	// This allows the footer section to be sticky at the bottom of the viewport.
	flex-grow: 1;
	margin-bottom: $grid-unit-20;
	&.has-footer {
		margin-bottom: 0;
	}
}

.edit-site-sidebar-navigation-screen__content {
	padding: 0 $grid-unit-20;

	.components-item-group {
		margin-left: -$grid-unit-20;
		margin-right: -$grid-unit-20;
	}

	.components-text {
		color: $gray-400;
	}

	.components-heading {
		margin-bottom: $grid-unit-10;
	}
}

.edit-site-sidebar-navigation-screen__meta {
	margin: 0 0 $grid-unit-20 0;
	color: $gray-400;
	margin-left: $grid-unit-20;
	.components-text {
		color: $gray-400;
	}
}

.edit-site-sidebar-navigation-screen__page-link {
	color: $gray-600;

	&:hover,
	&:focus {
		color: $white;
	}

	.components-external-link__icon {
		margin-left: $grid-unit-05;
	}
	display: inline-block;
}

.edit-site-sidebar-navigation-screen__title-icon {
	position: sticky;
	top: 0;
	background: $gray-900;
	padding-top: $grid-unit-60 + $header-height;
	margin-bottom: $grid-unit-10;
	padding-bottom: $grid-unit-10;
	z-index: z-index(".edit-site-sidebar-navigation-screen__title-icon");
}

.edit-site-sidebar-navigation-screen__title {
	flex-grow: 1;
	padding: $grid-unit-15 * 0.5 0 0 0;
	overflow: hidden;
	overflow-wrap: break-word;
}

.edit-site-sidebar-navigation-screen__actions {
	flex-shrink: 0;
}

.edit-site-sidebar-navigation-screen__content .edit-site-global-styles-style-variations-container {
	.edit-site-global-styles-variations_item-preview {
		border: $gray-900 $border-width solid;
	}
	.edit-site-global-styles-variations_item.is-active .edit-site-global-styles-variations_item-preview {
		border: $gray-100 $border-width solid;
	}
	.edit-site-global-styles-variations_item:hover .edit-site-global-styles-variations_item-preview {
		border: var(--wp-admin-theme-color) $border-width solid;
	}

	.edit-site-global-styles-variations_item:focus .edit-site-global-styles-variations_item-preview {
		border: var(--wp-admin-theme-color) var(--wp-admin-border-width-focus) solid;
	}
}

.edit-site-sidebar-navigation-screen__footer {
	position: sticky;
	bottom: 0;
	background-color: $gray-900;
	gap: 0;
	padding: $grid-unit-20 0;
	margin: $grid-unit-20 0 0;
	border-top: 1px solid $gray-800;
}

.edit-site-sidebar__notice {
	background: $gray-800;
	color: $gray-300;
	margin: $grid-unit-30 0;
	&.is-dismissible {
		padding-right: $grid-unit-10;
	}
	.components-notice__dismiss:not(:disabled):not([aria-disabled="true"]):focus,
	.components-notice__dismiss:not(:disabled):not([aria-disabled="true"]):not(.is-secondary):active,
	.components-notice__dismiss:not(:disabled):not([aria-disabled="true"]):not(.is-secondary):hover {
		color: $gray-100;
	}
}

/* In general style overrides are discouraged.
 * This is a temporary solution to override the InputControl component's styles.
 * The `Theme` component will potentially be the more appropriate approach
 * once that component is stabilized.
 * See: packages/components/src/theme
 */
.edit-site-sidebar-navigation-screen__input-control {
	width: 100%;
	.components-input-control__container {
		background: $gray-800;

		.components-button {
			color: $gray-200 !important;
		}
	}
	.components-input-control__input {
		color: $gray-200 !important;
		background: $gray-800 !important;
	}
	.components-input-control__backdrop {
		border: 4px !important;
	}
	.components-base-control__help {
		color: $gray-600;
	}
}
