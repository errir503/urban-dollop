{
	"type": "ExportNamedDeclaration",
	"start": 521,
	"end": 609,
	"loc": {
		"start": {
			"line": 22,
			"column": 0
		},
		"end": {
			"line": 24,
			"column": 2
		}
	},
	"range": [ 521, 609 ],
	"declaration": {
		"type": "VariableDeclaration",
		"start": 528,
		"end": 609,
		"loc": {
			"start": {
				"line": 22,
				"column": 7
			},
			"end": {
				"line": 24,
				"column": 2
			}
		},
		"range": [ 528, 609 ],
		"declarations": [
			{
				"type": "VariableDeclarator",
				"start": 534,
				"end": 608,
				"loc": {
					"start": {
						"line": 22,
						"column": 13
					},
					"end": {
						"line": 24,
						"column": 1
					}
				},
				"range": [ 534, 608 ],
				"id": {
					"type": "Identifier",
					"start": 534,
					"end": 537,
					"loc": {
						"start": {
							"line": 22,
							"column": 13
						},
						"end": {
							"line": 22,
							"column": 16
						}
					},
					"range": [ 534, 537 ],
					"name": "sum"
				},
				"init": {
					"type": "ArrowFunctionExpression",
					"start": 540,
					"end": 608,
					"loc": {
						"start": {
							"line": 22,
							"column": 19
						},
						"end": {
							"line": 24,
							"column": 1
						}
					},
					"range": [ 540, 608 ],
					"id": null,
					"generator": false,
					"expression": false,
					"async": false,
					"params": [
						{
							"type": "Identifier",
							"start": 542,
							"end": 552,
							"loc": {
								"start": {
									"line": 22,
									"column": 21
								},
								"end": {
									"line": 22,
									"column": 31
								}
							},
							"range": [ 542, 552 ],
							"name": "firstParam"
						},
						{
							"type": "Identifier",
							"start": 554,
							"end": 565,
							"loc": {
								"start": {
									"line": 22,
									"column": 33
								},
								"end": {
									"line": 22,
									"column": 44
								}
							},
							"range": [ 554, 565 ],
							"name": "secondParam"
						}
					],
					"body": {
						"type": "BlockStatement",
						"start": 571,
						"end": 608,
						"loc": {
							"start": {
								"line": 22,
								"column": 50
							},
							"end": {
								"line": 24,
								"column": 1
							}
						},
						"range": [ 571, 608 ],
						"body": [
							{
								"type": "ReturnStatement",
								"start": 574,
								"end": 606,
								"loc": {
									"start": {
										"line": 23,
										"column": 1
									},
									"end": {
										"line": 23,
										"column": 33
									}
								},
								"range": [ 574, 606 ],
								"argument": {
									"type": "BinaryExpression",
									"start": 581,
									"end": 605,
									"loc": {
										"start": {
											"line": 23,
											"column": 8
										},
										"end": {
											"line": 23,
											"column": 32
										}
									},
									"range": [ 581, 605 ],
									"left": {
										"type": "Identifier",
										"start": 581,
										"end": 591,
										"loc": {
											"start": {
												"line": 23,
												"column": 8
											},
											"end": {
												"line": 23,
												"column": 18
											}
										},
										"range": [ 581, 591 ],
										"name": "firstParam"
									},
									"operator": "+",
									"right": {
										"type": "Identifier",
										"start": 594,
										"end": 605,
										"loc": {
											"start": {
												"line": 23,
												"column": 21
											},
											"end": {
												"line": 23,
												"column": 32
											}
										},
										"range": [ 594, 605 ],
										"name": "secondParam"
									}
								}
							}
						]
					}
				}
			}
		],
		"kind": "const"
	},
	"specifiers": [],
	"source": null,
	"leadingComments": [
		{
			"type": "Block",
			"value": "*\n * A function that adds two parameters.\n *\n * @deprecated Use native addition instead.\n * @since v2\n *\n * @see addition\n * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators\n *\n * @param {number} firstParam The first param to add.\n * @param {number} secondParam The second param to add.\n *\n *  @example\n *\n * ```js\n * const addResult = sum( 1, 3 );\n * console.log( addResult ); // will yield 4\n * ```\n *\n * @return {number} The result of adding the two params.\n ",
			"start": 0,
			"end": 520,
			"range": [ 0, 520 ],
			"loc": {
				"start": {
					"line": 1,
					"column": 0
				},
				"end": {
					"line": 21,
					"column": 3
				}
			}
		}
	]
}
