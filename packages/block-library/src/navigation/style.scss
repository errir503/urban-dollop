// Navigation block and menu item styles.
// These styles also affect the Page List block when used inside your navigation block.
//
// Classes:
// - .wp-block-navigation__submenu-container targets submenu containers.
// - .wp-block-navigation-item targets the menu item itself.
// - .wp-block-navigation-item__content targets the link inside a menu item.
// - .wp-block-navigation__submenu-icon targets the chevron icon indicating submenus.
.wp-block-navigation {
	position: relative;

	// Horizontal layout
	display: flex;
	flex-wrap: wrap;
	align-items: center;

	// Vertical layout
	&.is-vertical {
		flex-direction: column;
		align-items: flex-start;
	}

	// Normalize list styles.
	ul,
	ul li {
		list-style: none;

		// Overrides generic ".entry-content li" styles on the front end.
		padding: 0;
	}

	// Menu item container.
	.wp-block-navigation-item {
		display: flex;
		align-items: center;
		position: relative;

		.wp-block-navigation__submenu-container:empty {
			display: none;
		}
	}

	// Menu item link.
	// By targetting the markup directly we enable greater global styles compatibility.
	// The extra container specificity is due to global styles outputting link styles that need overriding.
	&.wp-block-navigation a {
		// Inherit colors set by the block color definition.
		color: inherit;
		display: block;
	}

	// Force links to inherit text decoration applied to navigation block.
	// The extra selector adds specificity to ensure it works when user-set.
	&[style*="text-decoration"] {
		.wp-block-navigation-item,
		.wp-block-navigation__submenu-container {
			text-decoration: inherit;
		}

		a {
			text-decoration: inherit;

			&:focus,
			&:active {
				text-decoration: inherit;
			}
		}
	}

	&:not([style*="text-decoration"]) {
		a {
			text-decoration: none;

			&:focus,
			&:active {
				text-decoration: none;
			}
		}
	}

	// Submenu indicator.
	.wp-block-navigation__submenu-icon {
		align-self: center;
		height: inherit;
		line-height: 0;
		margin-left: 6px;

		svg {
			display: inline-block;
			stroke: currentColor;
		}
	}
}


// Styles for submenu flyout.
// These are separated out with reduced specificity to allow better inheritance from Global Styles.
.wp-block-navigation .has-child {
	// We use :where to keep specificity minimal, yet still scope it to only the navigation block.
	// That way if padding is set in theme.json, it still wins.
	// https://css-tricks.com/almanac/selectors/w/where/
	:where(.wp-block-navigation__submenu-container) {
		background-color: inherit;
		color: inherit;
		position: absolute;
		z-index: 2;
		display: flex;
		flex-direction: column;
		align-items: normal;
		min-width: 200px;

		// Hide until hover or focus within.
		opacity: 0;
		transition: opacity 0.1s linear;
		visibility: hidden;

		// Submenu items.
		> .wp-block-navigation-item {
			> a {
				display: flex;
				flex-grow: 1;

				// Right-align the chevron in submenus.
				.wp-block-navigation__submenu-icon {
					margin-right: 0;
					margin-left: auto;
				}
			}
		}

		// Spacing in all submenus.
		a {
			margin: 0;
		}

		// Submenu indentation when there's no background.
		left: -1em;
		top: 100%;

		// Indentation for all submenus.
		// Nested submenus sit to the left on large breakpoints.
		// On smaller breakpoints, they open vertically, accordion-style.
		@include break-medium {
			.wp-block-navigation__submenu-container {
				left: 100%;
				top: -1px; // Border width.

				// Prevent the menu from disappearing when the mouse is over the gap
				&::before {
					content: "";
					position: absolute;
					right: 100%;
					height: 100%;
					display: block;
					width: 0.5em;
					background: transparent;
				}
			}

			// Reset the submenu indicator for horizontal flyouts.
			.wp-block-navigation__submenu-icon svg {
				transform: rotate(-90deg);
			}
		}
	}


	// Separating out hover and focus-within so hover works again on IE: https://davidwalsh.name/css-focus-within#comment-513401
	// We will need to replace focus-within with a JS solution for IE keyboard support.

	// Custom menu items.
	// Show submenus on hover.
	&:hover > .wp-block-navigation__submenu-container {
		visibility: visible;
		opacity: 1;
	}

	// Keep submenus open when focus is within.
	&:focus-within > .wp-block-navigation__submenu-container {
		visibility: visible;
		opacity: 1;
	}
}

// Submenu indentation when there's a background.
.wp-block-navigation.has-background .has-child .wp-block-navigation__submenu-container {
	left: 0;
	top: 100%;

	// There's no border on submenus when there are backgrounds.
	@include break-medium {
		.wp-block-navigation__submenu-container {
			left: 100%;
			top: 0;
		}
	}
}


/**
 * Margins
 * @todo: refactor this to use gap.
 */

// Menu items with no background.
.wp-block-page-list,
.wp-block-page-list > .wp-block-navigation-item,
.wp-block-navigation__container > .wp-block-navigation-item {
	margin: 0 2em 0 0;

	// Margin of right-most margin should be zero, for right aligned or justified items.
	&:last-child {
		margin-right: 0;
	}
}

// Menu items with background.
// We use :where to keep specificity minimal, yet still scope it to only the navigation block.
// That way if padding is set in theme.json, it still wins.
// https://css-tricks.com/almanac/selectors/w/where/
.wp-block-navigation:where(.has-background) {
	.wp-block-page-list,
	.wp-block-page-list > .wp-block-navigation-item,
	.wp-block-navigation__container > .wp-block-navigation-item {
		margin: 0 0.5em 0 0;

		// Don't show right margin on the last child.
		&:last-child {
			margin: 0;
		}
	}
}


/**
 * Paddings
 */

// We use :where to keep specificity minimal, yet still scope it to only the navigation block.
// That way if padding is set in theme.json, it still wins.
// https://css-tricks.com/almanac/selectors/w/where/

// Set the default menu item padding to zero, to allow text-only buttons.
.wp-block-navigation a {
	padding: 0;
}

// When the menu has a background, items have paddings, reduce margins to compensate.
// Treat margins and paddings differently when the block has a background.
.wp-block-navigation:where(.has-background) a {
	padding: 0.5em 1em;
}

// Provide a default padding for submenus who should always have some, regardless of the top level menu items.
.wp-block-navigation :where(.wp-block-navigation__submenu-container) a {
	padding: 0.5em 1em;
}


/**
 * Justifications.
 */

// When justified space-between, open submenus leftward for last menu item.
// When justified right, open all submenus leftwards.
// This needs high specificity.
.wp-block-navigation.items-justified-space-between .wp-block-page-list > .has-child:last-child,
.wp-block-navigation.items-justified-space-between > .wp-block-navigation__container > .has-child:last-child,
.wp-block-navigation.items-justified-right .wp-block-page-list > .has-child,
.wp-block-navigation.items-justified-right > .wp-block-navigation__container .has-child {

	// First submenu.
	.wp-block-navigation__submenu-container {
		left: auto;
		right: 0;

		// Nested submenus.
		.wp-block-navigation__submenu-container {
			left: auto;
			right: 100%;
		}
	}
}

// Default background and font color.
.wp-block-navigation:not(.has-background) {
	.wp-block-navigation__submenu-container {
		// Set a background color for submenus so that they're not transparent.
		// NOTE TO DEVS - if refactoring this code, please double-check that
		// submenus have a default background color, this feature has regressed
		// several times, so care needs to be taken.
		background-color: #fff;
		color: #000;
		border: 1px solid rgba(0, 0, 0, 0.15);
	}
}

// Navigation block inner container.
.wp-block-navigation__container {
	// Vertically center child blocks, like Social Links or Search.
	align-items: center;

	// Reset the default list styles
	list-style: none;
	margin: 0;
	padding-left: 0;

	// Only hide the menu by default if responsiveness is active.
	.is-responsive {
		display: none;
	}

	// Horizontal layout
	display: flex;
	flex-wrap: wrap;
	flex: 1;
}

// Vertical layout
.is-vertical .wp-block-page-list, // Page list.
.is-vertical .wp-block-navigation__container {
	display: block;
	flex-direction: column;
	align-items: flex-start;
}

// Justification.
// These target the named container class to work even with the additional mobile menu containers.
.items-justified-center .wp-block-navigation__container {
	justify-content: center;
}

.items-justified-right .wp-block-navigation__container {
	justify-content: flex-end;
}

.items-justified-space-between .wp-block-navigation__container {
	justify-content: space-between;
}

// Vertical justification.
.is-vertical.items-justified-center > ul {
	align-items: center;
}

.is-vertical.items-justified-right > ul {
	align-items: flex-end;

	.wp-block-navigation-item {
		margin-right: 0;
		justify-content: flex-end;
	}
}


/**
 * Mobile menu.
 */

.wp-block-navigation__responsive-container {
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 1;
	align-items: flex-start;
	justify-content: flex-start;

	// Overlay menu.
	// Provide an opinionated default style for menu items inside.
	// Inherit as much as we can regarding colors, fonts, sizes,
	// but otherwise provide a baseline.
	// In a future version, we can explore more customizability.
	&.is-menu-open {
		display: flex;
		flex-direction: column;

		// Allow modal to scroll.
		overflow: auto;

		// Give it a z-index just higher than the adminbar.
		z-index: 100000;

		padding: 24px;
		background-color: inherit;

		.wp-block-navigation__container {
			display: flex;
			flex-direction: column;
			margin-left: auto;
			margin-right: auto;
			align-items: flex-start;
			line-height: 48px;
			padding: 0;

			.wp-block-page-list {
				flex-direction: column;
			}
		}

		// Remove background colors for items inside the overlay menu.
		// Has to be !important to override global styles.
		// @todo: We should revisit this so that the overlay colors can be applied, instead of the background.
		.wp-block-navigation-item .wp-block-navigation__submenu-container,
		.wp-block-navigation-item {
			color: inherit !important;
			background: transparent !important;
		}
	}

	@include break-small() {
		&:not(.is-menu-open) {
			display: flex;
			flex-direction: row;
			position: relative;
			z-index: 2;
			background-color: inherit;

			.wp-block-navigation__responsive-container-close {
				display: none;
			}
		}

		&.is-menu-open {
			// Override breakpoint-inherited submenu rules.
			.wp-block-navigation__submenu-container.wp-block-navigation__submenu-container.wp-block-navigation__submenu-container.wp-block-navigation__submenu-container {
				left: 0;
			}
		}
	}
}

// Default menu background and font color.
.wp-block-navigation:not(.has-background) .wp-block-navigation__responsive-container.is-menu-open {
	background-color: #fff;
	color: #000;
}

// Menu and close buttons.
.wp-block-navigation__responsive-container-open,
.wp-block-navigation__responsive-container-close {
	vertical-align: middle;
	cursor: pointer;
	color: currentColor;
	background: transparent;
	border: none;
	margin: 0;
	padding: 0;

	svg {
		fill: currentColor;
		pointer-events: none;
		display: block;
		width: 24px;
		height: 24px;
	}
}

// Button to open the menu.
.wp-block-navigation__responsive-container-open {
	display: flex;

	@include break-small {
		display: none;
	}

	// Justify the button.
	.items-justified-left & {
		margin-left: 0;
		margin-right: auto;
	}

	.items-justified-center & {
		margin-left: auto;
		margin-right: auto;
	}

	.items-justified-right & {
		margin-left: auto;
		margin-right: 0;
	}
}

// Button to close the menus.
.wp-block-navigation__responsive-container-close {
	position: absolute;
	top: 24px;
	right: 24px;
	z-index: 2; // Needs to be above the modal z index itself.
}

// The menu adds wrapping containers.
.wp-block-navigation__responsive-close {
	width: 100%;
}

.is-menu-open .wp-block-navigation__responsive-close,
.is-menu-open .wp-block-navigation__responsive-dialog,
.is-menu-open .wp-block-navigation__responsive-container-content {
	width: 100%;
	height: 100%;
}

// Always show submenus fully expanded inside the modal menu.
.wp-block-navigation .wp-block-navigation__responsive-container.is-menu-open {
	.wp-block-navigation__submenu-icon {
		display: none;
	}

	.has-child .submenu-container,
	.has-child .wp-block-navigation__submenu-container {
		position: relative;
		opacity: 1;
		visibility: visible;

		padding: 0 0 0 32px;
		border: none;
	}

	.wp-block-navigation-item {
		flex-direction: column;
		align-items: flex-start;
	}
}

html.has-modal-open {
	overflow: hidden;
}
